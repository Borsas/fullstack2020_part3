{"version":3,"sources":["components/Persons.js","components/Input.js","components/PersonForm.js","services/Numbers.js","components/Notification.js","App.js","index.js"],"names":["Persons","persons","filter","handleDelete","map","person","name","toLowerCase","indexOf","key","number","type","onClick","id","Input","value","onChange","PersonForm","newName","handleNewName","newNumber","handleNewNumber","handleSubmit","baseUrl","axios","get","then","resp","data","post","delete","put","Notification","message","className","App","useState","setPersons","newFilter","setNewFilter","setNewName","setNewNumber","setMessage","messageType","setMessageType","update","setUpdate","useEffect","NumberService","handleUpdateNumber","find","n","changeMessage","catch","setTimeout","e","target","event","preventDefault","some","window","confirm","concat","err","response","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.706d5d61.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({persons, filter, handleDelete}) => {\n\n  return (\n    <div>\n      {persons.map((person) => {\n        if (person.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\n          return (\n            <div key={person.name}>\n              {person.name} {person.number}\n              <button type=\"submit\"\n              onClick={() => {handleDelete(person.name, person.id)}}>Delete</button>\n            </div>\n          )\n        } else {\n          return null\n        }\n      })}\n    </div>\n  )\n}\n\n\nexport default Persons","import React from 'react'\n\nconst Input = ({name, value, onChange}) => {\n    return (\n        <div>\n            {name} \n            <input value={value} onChange={onChange}/>\n        </div>\n    )\n}\n\nexport default Input\n","import React from 'react'\nimport Input from './Input'\n\nconst PersonForm = ({newName, handleNewName, newNumber, handleNewNumber, handleSubmit}) => {\n    return (\n        <form>\n            <Input name=\"Name:\" value={newName} onChange={handleNewName}/>\n            <Input name=\"Number:\" value={newNumber} onChange={handleNewNumber}/>\n            <div>\n                <button type=\"submit\" onClick={handleSubmit}>add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getNumbers = () => {\n    const req = axios.get(baseUrl)\n    return req.then(resp => resp.data)\n}\n\nconst create = (newNumber) => {\n    const req = axios.post(baseUrl, newNumber)\n    return req.then(resp => resp.data)\n}\n\n// bubblegum\nconst deleteNumber = (id) => {\n    const req =  axios.delete(`${baseUrl}/${id}`)\n    return req.then(resp => resp.data)\n}\n\nconst updateNumbers = (newNumber, id) => {\n    const req = axios.put(`${baseUrl}/${id}`, newNumber)\n    return req.then(resp => resp)\n}\n\nexport default {getNumbers, create, deleteNumber, updateNumbers}","import React from 'react'\nimport '../index.css'\n\nconst Notification = ({message, type}) => {\n    if (message === null){\n        return null\n    }\n\n    return (\n    <div className={type}>\n        {message}\n    </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Input from './components/Input'\nimport PersonForm from './components/PersonForm'\nimport NumberService from './services/Numbers'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([]) \n    const [ newFilter, setNewFilter ] = useState('')\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ message, setMessage ] = useState(null)\n    const [ messageType, setMessageType] = useState(\"success\")\n    const [ update, setUpdate] = useState(false)\n\n    useEffect(() => {\n        NumberService\n        .getNumbers()\n        .then(resp => {\n            setPersons(resp)\n            setUpdate(false)\n        })\n    }, [update])\n\n    const handleNewName = (e) => {\n        setNewName(e.target.value)\n    }\n\n    const handleNewNumber = (e) => {\n        setNewNumber(e.target.value)\n    }\n    \n    const handleNewFilter = (e) => {\n        setNewFilter(e.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        if (persons.some((person) => {return (person.name === newName) })) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                const person = persons.find(n => n.name === newName)\n                handleUpdateNumber(newNumber, person.id)\n            }\n        } else {\n            const newPerson = {\"name\": newName, \"number\": newNumber}\n            NumberService\n            .create(newPerson)\n            .then(resp => {\n                setPersons(persons.concat(resp))\n                setNewName(\"\")\n                setNewNumber(\"\")\n                changeMessage(`Added ${newName}`, \"success\")\n            })\n            .catch(err => {\n                changeMessage(err.response.data.error.message, \"error\")\n            })\n        }\n    }\n\n    const handleDelete = (name, id) => {\n        if (window.confirm(`Delete ${name}?`)){\n            NumberService.deleteNumber(id)\n            .then(() => {\n                setUpdate(true)\n                changeMessage(`Deleted ${name} succesfully`, \"success\")\n            })\n        \n        }\n    }\n\n    const handleUpdateNumber = (newNumber, id) => {\n        const person = persons.find(n => n.id === id)\n        person.number = newNumber\n        NumberService\n        .updateNumbers(person, id)\n        .then(() => {\n            setNewName(\"\")\n            setNewNumber(\"\")\n            // This is pretty bubblegum but got dammit i dont know\n            // what else to do !!\n            setUpdate(true)\n            changeMessage(`Updated ${newName}'s number to ${newNumber}`, \"success\")\n        })\n        .catch(() => {\n            changeMessage(`Information of ${person.name} has already been removed from server`, \"error\")\n        })\n    }\n\n    const changeMessage = (message, messageType) => {\n        setMessage(message)\n        setMessageType(messageType)\n        setTimeout(() => {\n            setMessage(null)\n        }, 2500)\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} type={messageType}/>\n            <div>\n                <Input name=\"Filter shown with\" value={newFilter} onChange={handleNewFilter}/>\n            </div>\n\n            <h3>Add a new</h3>\n            <PersonForm newNumber={newNumber} newName={newName}\n            handleNewName={handleNewName}\n            handleNewNumber={handleNewNumber}\n            handleSubmit={handleSubmit} />\n\n            <h2>Numbers</h2>\n            <Persons persons={persons} filter={newFilter}\n            handleDelete={handleDelete} />\n        </div>\n    )\n    }\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}